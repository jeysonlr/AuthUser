<?php
/**
 * Development-only configuration.
 *
 * Put settings you want enabled when under development mode in this file, and
 * check it into your repository.
 *
 * Developers on your team will then automatically enable them by calling on
 * `composer development-enable`.
 */

declare(strict_types=1);

se Zend\Expressive\Container;
use Doctrine\DBAL\Driver\PDOPgSql\Driver;
use Doctrine\ORM\Mapping\Driver\AnnotationDriver;
use Doctrine\DBAL\Driver\DrizzlePDOMySql\Driver;
use Zend\Expressive\Middleware\ErrorResponseGenerator;
use Doctrine\Common\Persistence\Mapping\Driver\MappingDriverChain;

return [
    'dependencies' => [
        'invokables' => [
        ],
        'factories'  => [
            ErrorResponseGenerator::class       => Container\WhoopsErrorResponseGeneratorFactory::class,
            'Zend\Expressive\Whoops'            => Container\WhoopsFactory::class,
            'Zend\Expressive\WhoopsPageHandler' => Container\WhoopsPageHandlerFactory::class,
        ],
    ],

    'whoops' => [
        'json_exceptions' => [
            'display'    => true,
            'show_trace' => true,
            'ajax_only'  => true,
        ],
    ],
    /**
    * doctrine.global
    */
    'doctrine' => [
        'connection' => [
            'orm_default' => [
                'params' => [
                    'driverClass' => Doctrine\DBAL\Driver\PDOMySql\Driver::class,
                    'driverOptions' => array(PDO::ATTR_EMULATE_PREPARES => true),
                    'charset' => 'utf8',
                    'host' => 127.0.0.1,
                    'port' => 3306,
                    'user' => 'envuser',
                    'password' => '1234',
                    'dbname' => 'environment',
                    'driverOptions' => [
                        1002 => "SET NAMES 'UTF8'"
                    ]
                ],
            ],
        ],
        'driver' => [
            'orm_default' => [
                'class' => MappingDriverChain::class,
                'drivers' => [
                    'App\Entity' => 'app_entity',
                    'User\Entity' => 'user_entity',
                ],
            ],
            'app_entity' => [
                'class' => AnnotationDriver::class,
                'cache' => 'array',
                'paths' => [__DIR__ . '/../../src/App/src/Entity'],
            ],
            'user_entity' => [
                'class' => AnnotationDriver::class,
                'cache' => 'array',
                'paths' => [__DIR__ . '/../../src/User/src/Entity'],
            ],
        ],
    ],
    /**
    * check-connection-database
    */
    'check-connection' => [
        'parceiros.teste' => ['sabium'],
    ],
];
